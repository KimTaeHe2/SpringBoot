buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
} // 쿼리dsl 버전 관리 (http://www.querydsl.com)
// 쿼리dsl Qdomain 생성 -> Gradle -> Tasks -> other -> complieJava
// 쿼리dsl Qdomain 생성 오류시 Gradle -> Tasks -> build -> Clean -> 생성

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.10'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies { // 과거의 스프링의 메이븐 리포지토리 (pom.xml)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'         // 프론트 담당
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'  // 날자 시간 출력 포멧팅
    implementation 'org.springframework.boot:spring-boot-starter-web'               // 스프링 웹
    implementation 'org.springframework.boot:spring-boot-starter-web-services'      // 스프링 웹 서비스
    compileOnly 'org.projectlombok:lombok'                                          // 객체 담당
    developmentOnly 'org.springframework.boot:spring-boot-devtools'                 // 부트 개발 필수 코드
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.4'    // DB 객체지향으로 설정
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1'                     // 마리아DB JDBC 드라이버 버전 지정
    // runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'                           // 마리아DB JDBC 드라이버
    // jpa에서 필요한 url, id, pw, 드라이버 등을 application.properties 에 넣어야 함
    annotationProcessor 'org.projectlombok:lombok'                                  // 어노테이션으로 럼북 셋팅
    testCompileOnly 'org.projectlombok:lombok'                                      // 테스트 환경에서 사용하는 lombok
    testAnnotationProcessor 'org.projectlombok:lombok'                              // 테스트 환경에서 사용하는 Annotation
    testImplementation 'org.springframework.boot:spring-boot-starter-test'          // 테스트용 코드
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'                    // 메서드별로 테스트
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"           //쿼리 dsl 관련 설정 추가
    annotationProcessor(// 쿼리 dsl 관련 설정 추가
            // 톰켓 9 용 "javax.persistence:javax.persistence-api",
            // 톰켓 9 용 "javax.annotation:javax.annotation-api",
            // 톰켓 9 용 "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"

            // 톰켓 10 용
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

//쿼리dsl 관련 설정 추가
//def querydslDir = "$buildDir/generated/querydsl"

// 톰켓 9 용 querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}

sourceSets {
    // 톰켓 9용 main.java.srcDir querydslDir

    // 톰켓 10용
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }

}


compileJava.dependsOn('clean') // 톰켓 10용
// 톰켓 9용
//configurations {
//    querydsl.extendsFrom compileClasspath
//}

// 톰켓 9용
//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}
